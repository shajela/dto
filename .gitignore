# ============================================================================
# DTO - Distributed Training Orchestrator .gitignore
# ============================================================================

# ============================================================================
# Python
# ============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea/ directory.
.idea/

# ============================================================================
# Machine Learning & Data Science
# ============================================================================
# Model files
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.onnx
*.tflite
*.pt
*.pth
*.bin
*.safetensors

# Dataset files
*.csv
*.tsv
*.parquet
*.arrow
*.feather
data/
datasets/
raw_data/
processed_data/

# Training artifacts
checkpoints/
logs/
runs/
outputs/
results/
models/
weights/
saved_models/
tensorboard_logs/
wandb/
mlruns/

# Jupyter notebook outputs
*.ipynb_checkpoints/
.ipynb_checkpoints

# ============================================================================
# Terraform
# ============================================================================
# Local .terraform directories
**/.terraform/*
.terraform.lock.hcl

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Terraform lock file (depending on team preference)
# .terraform.lock.hcl

# ============================================================================
# AWS & Cloud
# ============================================================================
# AWS credentials and config
.aws/
aws-credentials
aws-config

# SSH keys
*.pem
*.ppk
id_rsa*
id_ed25519*
known_hosts

# Cloud-init logs
cloud-init-output.log

# ============================================================================
# SLURM & HPC
# ============================================================================
# SLURM job files
slurm-*.out
slurm-*.err
*.sbatch
*.job

# SLURM logs
slurmd.log
slurmctld.log

# ============================================================================
# Docker
# ============================================================================
# Docker files
Dockerfile.local
docker-compose.override.yml
.dockerignore

# ============================================================================
# IDE & Editor
# ============================================================================
# VSCode
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ============================================================================
# Operating System
# ============================================================================
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# ============================================================================
# Temporary & Cache Files
# ============================================================================
# General
tmp/
temp/
cache/
.cache/
.tmp/

# Node modules (if using any Node.js tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ============================================================================
# Security & Secrets
# ============================================================================
# Environment files
.env
.env.local
.env.*.local
.env.production
.env.development
.env.test

# Secret files
secrets/
secret.*
*.secret
*.key
*.cert
*.crt
*.csr

# Database
*.db
*.sqlite
*.sqlite3

# ============================================================================
# Logs & Monitoring
# ============================================================================
# Log files
*.log
logs/
log/

# Monitoring
prometheus/
grafana/

# ============================================================================
# Build & Compilation
# ============================================================================
# C/C++ compiled objects
*.o
*.a
*.lib
*.dll
*.dylib
*.exe

# CUDA
*.ptx
*.cubin

# ============================================================================
# Backup & Archive
# ============================================================================
# Backup files
*.bak
*.backup
*.old
*.orig
*.save

# Archive files
*.zip
*.tar
*.tar.gz
*.tgz
*.rar
*.7z

# ============================================================================
# Project Specific
# ============================================================================
# DTO specific
training_outputs/
cluster_logs/
benchmark_results/
performance_metrics/

# Local configuration overrides
local_config.py
local_settings.py
config.local.*

# Test outputs
test_results/
test_outputs/

# Documentation builds
docs/build/
docs/_build/

# ============================================================================
# Keep These Files (Negated Patterns)
# ============================================================================
# Keep example configurations
!terraform/examples/*.tf
!src/examples/
!README.md
!requirements.txt
!pyproject.toml
!LICENSE
!.gitignore
